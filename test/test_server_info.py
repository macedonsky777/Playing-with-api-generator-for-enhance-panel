# coding: utf-8

"""
    orchd

    orchd API docs

    The version of the OpenAPI document: 10.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.server_info import ServerInfo

class TestServerInfo(unittest.TestCase):
    """ServerInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServerInfo:
        """Test ServerInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServerInfo`
        """
        model = ServerInfo()
        if include_optional:
            return ServerInfo(
                id = '',
                group_id = '',
                is_control_panel = True,
                is_configured = True,
                friendly_name = '',
                hostname = '',
                ips = [
                    openapi_client.models.server_ip.ServerIp(
                        ip = '', 
                        is_primary = True, )
                    ],
                disks = [
                    openapi_client.models.disk.Disk(
                        name = '', 
                        mount_point = '', 
                        file_system = '', 
                        usage = openapi_client.models.space_usage.SpaceUsage(
                            total = 56, 
                            used = 56, ), 
                        kind = 'ssd', )
                    ],
                os_usage = 56,
                status = 'unknown',
                roles = openapi_client.models.roles_summary.RolesSummary(
                    email = openapi_client.models.role_summary.RoleSummary(
                        state = 'enabled', 
                        status = 'unknown', ), 
                    backup = openapi_client.models.role_summary.RoleSummary(
                        state = 'enabled', ), 
                    database = , 
                    application = , 
                    dns = , 
                    control_panel = , ),
                created_at = '',
                controld_version = '',
                dedicated_subscription = openapi_client.models.dedicated_subscription_info.DedicatedSubscriptionInfo(
                    subscription_id = 1.337, 
                    customer_org_id = '', 
                    customer_org_name = '', ),
                is_decommissioned = True,
                ipv6_addr = ''
            )
        else:
            return ServerInfo(
                id = '',
                group_id = '',
                is_control_panel = True,
                is_configured = True,
                friendly_name = '',
                hostname = '',
                ips = [
                    openapi_client.models.server_ip.ServerIp(
                        ip = '', 
                        is_primary = True, )
                    ],
                roles = openapi_client.models.roles_summary.RolesSummary(
                    email = openapi_client.models.role_summary.RoleSummary(
                        state = 'enabled', 
                        status = 'unknown', ), 
                    backup = openapi_client.models.role_summary.RoleSummary(
                        state = 'enabled', ), 
                    database = , 
                    application = , 
                    dns = , 
                    control_panel = , ),
                created_at = '',
                is_decommissioned = True,
        )
        """

    def testServerInfo(self):
        """Test ServerInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
