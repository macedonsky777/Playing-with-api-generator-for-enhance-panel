# coding: utf-8

"""
    orchd

    orchd API docs

    The version of the OpenAPI document: 10.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.branding_api import BrandingApi


class TestBrandingApi(unittest.TestCase):
    """BrandingApi unit test stubs"""

    def setUp(self) -> None:
        self.api = BrandingApi()

    def tearDown(self) -> None:
        pass

    def test_create_branding_settings(self) -> None:
        """Test case for create_branding_settings

        Create branding settings
        """
        pass

    def test_create_name_server_domain(self) -> None:
        """Test case for create_name_server_domain

        Create reseller name server domain
        """
        pass

    def test_delete_brand_favicon(self) -> None:
        """Test case for delete_brand_favicon

        Delete brand favicon
        """
        pass

    def test_delete_brand_inverse_icon(self) -> None:
        """Test case for delete_brand_inverse_icon

        Delete brand inverse icon
        """
        pass

    def test_delete_brand_login_image(self) -> None:
        """Test case for delete_brand_login_image

        Delete brand login image
        """
        pass

    def test_delete_brand_logo(self) -> None:
        """Test case for delete_brand_logo

        Delete brand logo
        """
        pass

    def test_delete_branding_setting(self) -> None:
        """Test case for delete_branding_setting

        Remove the specified setting
        """
        pass

    def test_delete_inverse_brand_logo(self) -> None:
        """Test case for delete_inverse_brand_logo

        Delete brand inverse logo
        """
        pass

    def test_delete_name_server_domain(self) -> None:
        """Test case for delete_name_server_domain

        Delete reseller name server domain name
        """
        pass

    def test_get_branding(self) -> None:
        """Test case for get_branding

        Get default branding
        """
        pass

    def test_get_branding_setting(self) -> None:
        """Test case for get_branding_setting

        Get the specified setting
        """
        pass

    def test_get_branding_settings(self) -> None:
        """Test case for get_branding_settings

        Get all current settings
        """
        pass

    def test_get_staging_domain(self) -> None:
        """Test case for get_staging_domain

        Fetches the staging domain which is currently set
        """
        pass

    def test_set_brand_favicon(self) -> None:
        """Test case for set_brand_favicon

        Set brand favicon
        """
        pass

    def test_set_brand_inverse_icon(self) -> None:
        """Test case for set_brand_inverse_icon

        Set brand inverse icon
        """
        pass

    def test_set_brand_inverse_logo(self) -> None:
        """Test case for set_brand_inverse_logo

        Set brand inverse logo
        """
        pass

    def test_set_brand_login_image(self) -> None:
        """Test case for set_brand_login_image

        Set brand login image
        """
        pass

    def test_set_brand_logo(self) -> None:
        """Test case for set_brand_logo

        Set brand logo
        """
        pass

    def test_set_staging_domain(self) -> None:
        """Test case for set_staging_domain

        Set or update domain suffix for staging websites created by customers
        """
        pass

    def test_update_branding_setting(self) -> None:
        """Test case for update_branding_setting

        Create or update the specified setting
        """
        pass

    def test_update_name_server_domain(self) -> None:
        """Test case for update_name_server_domain

        Update reseller name server domain name
        """
        pass


if __name__ == '__main__':
    unittest.main()
