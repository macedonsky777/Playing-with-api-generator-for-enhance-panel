# coding: utf-8

"""
    orchd

    orchd API docs

    The version of the OpenAPI document: 10.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.websites_api import WebsitesApi


class TestWebsitesApi(unittest.TestCase):
    """WebsitesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = WebsitesApi()

    def tearDown(self) -> None:
        pass

    def test_add_domain_nginx_fast_cgi_excluded_path(self) -> None:
        """Test case for add_domain_nginx_fast_cgi_excluded_path

        Add Nginx FastCGI excluded path
        """
        pass

    def test_authorize_website_ssh_key(self) -> None:
        """Test case for authorize_website_ssh_key

        Authorize a new SSH key.
        """
        pass

    def test_authorize_website_ssh_password(self) -> None:
        """Test case for authorize_website_ssh_password

        Authorize a new SSH password for website.
        """
        pass

    def test_clear_domain_nginx_fast_cgi(self) -> None:
        """Test case for clear_domain_nginx_fast_cgi

        Clear FastCGI cache for domain
        """
        pass

    def test_clone_website(self) -> None:
        """Test case for clone_website

        Clone website or push live
        """
        pass

    def test_create_ftp_user(self) -> None:
        """Test case for create_ftp_user

        Creates a new FTP user for a given website
        """
        pass

    def test_create_preview_domain(self) -> None:
        """Test case for create_preview_domain

        Create a preview domain
        """
        pass

    def test_create_website(self) -> None:
        """Test case for create_website

        Create a new website or clone an existing one.
        """
        pass

    def test_create_website_domain_letsencrypt_certs(self) -> None:
        """Test case for create_website_domain_letsencrypt_certs

        Generate and setup letsencrypt ssl certificates for website's domain
        """
        pass

    def test_create_website_mail_domain_letsencrypt_certs(self) -> None:
        """Test case for create_website_mail_domain_letsencrypt_certs

        Generate and setup letsencrypt ssl certificates for website's domain with mail. prefix.
        """
        pass

    def test_create_website_mapped_domain(self) -> None:
        """Test case for create_website_mapped_domain

        Create website mapped domain
        """
        pass

    def test_create_website_my_sqldb(self) -> None:
        """Test case for create_website_my_sqldb

        Create a MySQL database for website
        """
        pass

    def test_delete_domain_nginx_fast_cgi_excluded_path(self) -> None:
        """Test case for delete_domain_nginx_fast_cgi_excluded_path

        Delete Nginx FastCGI excluded path
        """
        pass

    def test_delete_domain_webserver_rewrite(self) -> None:
        """Test case for delete_domain_webserver_rewrite

        Delete web server rewrite
        """
        pass

    def test_delete_ftp_user(self) -> None:
        """Test case for delete_ftp_user

        Deletes given FTP user
        """
        pass

    def test_delete_user_crontab(self) -> None:
        """Test case for delete_user_crontab

        Delete user's crontab
        """
        pass

    def test_delete_website(self) -> None:
        """Test case for delete_website

        Delete website
        """
        pass

    def test_delete_website_domain_mapping(self) -> None:
        """Test case for delete_website_domain_mapping

        Delete website domain mapping
        """
        pass

    def test_delete_website_domain_vhost(self) -> None:
        """Test case for delete_website_domain_vhost

        Deletes domain's custom vhost file if any
        """
        pass

    def test_delete_website_setting(self) -> None:
        """Test case for delete_website_setting

        Delete a single override setting
        """
        pass

    def test_delete_websites(self) -> None:
        """Test case for delete_websites

        Delete websites
        """
        pass

    def test_disable_website_php_extension(self) -> None:
        """Test case for disable_website_php_extension

        Disable a PHP extension
        """
        pass

    def test_enable_website_php_extension(self) -> None:
        """Test case for enable_website_php_extension

        Enable a PHP extension
        """
        pass

    def test_get_domain_nginx_fast_cgi(self) -> None:
        """Test case for get_domain_nginx_fast_cgi

        Get status of Nginx FastCGI enablement
        """
        pass

    def test_get_domain_nginx_fast_cgi_excluded_paths(self) -> None:
        """Test case for get_domain_nginx_fast_cgi_excluded_paths

        Get Nginx FastCGI excluded paths
        """
        pass

    def test_get_domain_webserver_rewrites(self) -> None:
        """Test case for get_domain_webserver_rewrites

        Get web server rewrites for specified domain
        """
        pass

    def test_get_ftp_users(self) -> None:
        """Test case for get_ftp_users

        Returns all ftp users data for a given website
        """
        pass

    def test_get_screenshot_timestamp(self) -> None:
        """Test case for get_screenshot_timestamp

        Get last screeshot file's Timestamp
        """
        pass

    def test_get_site_access_token(self) -> None:
        """Test case for get_site_access_token

        Get an access token for the given website
        """
        pass

    def test_get_user_crontab(self) -> None:
        """Test case for get_user_crontab

        Get user's crontab
        """
        pass

    def test_get_website(self) -> None:
        """Test case for get_website

        Get website
        """
        pass

    def test_get_website_available_php_extensions(self) -> None:
        """Test case for get_website_available_php_extensions

        Get available PHP extensions for a website
        """
        pass

    def test_get_website_backup_status(self) -> None:
        """Test case for get_website_backup_status

        Get the status of an ongoing website backup operation
        """
        pass

    def test_get_website_cgroup_limits(self) -> None:
        """Test case for get_website_cgroup_limits

        Get the active cgroup limits for a website
        """
        pass

    def test_get_website_clone(self) -> None:
        """Test case for get_website_clone

        Get's detail about a single push live
        """
        pass

    def test_get_website_clone_log(self) -> None:
        """Test case for get_website_clone_log

        Get the log for a given clone id..
        """
        pass

    def test_get_website_clones(self) -> None:
        """Test case for get_website_clones

        List website clones for given OrgId
        """
        pass

    def test_get_website_domain_dns_query(self) -> None:
        """Test case for get_website_domain_dns_query

        Recursively query Dns servers for given domain
        """
        pass

    def test_get_website_domain_mapping(self) -> None:
        """Test case for get_website_domain_mapping

        Returns website domain mapping
        """
        pass

    def test_get_website_domain_mapping_dns_status(self) -> None:
        """Test case for get_website_domain_mapping_dns_status

        Returns website domain mapping DNS status
        """
        pass

    def test_get_website_domain_mappings(self) -> None:
        """Test case for get_website_domain_mappings

        Get website's mapped domains
        """
        pass

    def test_get_website_domain_mod_sec_status(self) -> None:
        """Test case for get_website_domain_mod_sec_status

        Get mod security status for a single domain
        """
        pass

    def test_get_website_domain_ssl_cert(self) -> None:
        """Test case for get_website_domain_ssl_cert

        Returns the SSL for this website domain
        """
        pass

    def test_get_website_domain_vhost(self) -> None:
        """Test case for get_website_domain_vhost

        Get domain's custom vhost file, if the file does not exist return empty string 
        """
        pass

    def test_get_website_enabled_php_extensions(self) -> None:
        """Test case for get_website_enabled_php_extensions

        Get enabled PHP extensions
        """
        pass

    def test_get_website_fs_quota_limits(self) -> None:
        """Test case for get_website_fs_quota_limits

        Get the active FS quoa limits for a website
        """
        pass

    def test_get_website_htaccess_ips_rule(self) -> None:
        """Test case for get_website_htaccess_ips_rule

        Returns current rules of blocked/whitelisted IPs
        """
        pass

    def test_get_website_htaccess_rewrites(self) -> None:
        """Test case for get_website_htaccess_rewrites

        Reads chains of rewrite rules
        """
        pass

    def test_get_website_ioncube_status(self) -> None:
        """Test case for get_website_ioncube_status

        Get ioncube status for an existing website
        """
        pass

    def test_get_website_mail_domain_ssl_cert(self) -> None:
        """Test case for get_website_mail_domain_ssl_cert

        Returns the SSL for this website domain with the mail.prefix
        """
        pass

    def test_get_website_metrics(self) -> None:
        """Test case for get_website_metrics

        Get website metrics
        """
        pass

    def test_get_website_my_sqldbs(self) -> None:
        """Test case for get_website_my_sqldbs

        Get website MySQL databases
        """
        pass

    def test_get_website_redis_state(self) -> None:
        """Test case for get_website_redis_state

        Get redis state for a website
        """
        pass

    def test_get_website_server_domains(self) -> None:
        """Test case for get_website_server_domains

        Fetch website server domains
        """
        pass

    def test_get_website_setting(self) -> None:
        """Test case for get_website_setting

        Get the value for a particular setting
        """
        pass

    def test_get_website_ssh_keys(self) -> None:
        """Test case for get_website_ssh_keys

        Get website's authorized SSH keys
        """
        pass

    def test_get_website_webserver_kind(self) -> None:
        """Test case for get_website_webserver_kind

        Get web server kind for a given website
        """
        pass

    def test_get_websites(self) -> None:
        """Test case for get_websites

        Get websites
        """
        pass

    def test_perform_lets_encrypt_preflight_check(self) -> None:
        """Test case for perform_lets_encrypt_preflight_check

        Perform the LetsEncrypt preflight check
        """
        pass

    def test_push_website_live(self) -> None:
        """Test case for push_website_live

        Making a staging website live
        """
        pass

    def test_restart_website_php(self) -> None:
        """Test case for restart_website_php

        Restart PHP container for a website
        """
        pass

    def test_set_domain_nginx_fast_cgi(self) -> None:
        """Test case for set_domain_nginx_fast_cgi

        Set Nginx FastCGI enablement
        """
        pass

    def test_set_domain_webserver_rewrite(self) -> None:
        """Test case for set_domain_webserver_rewrite

        Set web server rewrite to file
        """
        pass

    def test_set_website_cgroup_limits(self) -> None:
        """Test case for set_website_cgroup_limits

        Set the active cgroup limits for a website (Master org only)
        """
        pass

    def test_set_website_domain_force_ssl(self) -> None:
        """Test case for set_website_domain_force_ssl

        Set \"force ssl\" status for domain mapping
        """
        pass

    def test_set_website_domain_mod_sec_status(self) -> None:
        """Test case for set_website_domain_mod_sec_status

        Set mod security status on a single domain
        """
        pass

    def test_set_website_domain_vhost(self) -> None:
        """Test case for set_website_domain_vhost

        Set a custom vhost file
        """
        pass

    def test_set_website_fs_quota_limits(self) -> None:
        """Test case for set_website_fs_quota_limits

        Set the active FS quota limits for a website (Master org only)
        """
        pass

    def test_set_website_ioncube_status(self) -> None:
        """Test case for set_website_ioncube_status

        Set ioncube status for an existing website
        """
        pass

    def test_set_website_redis_state(self) -> None:
        """Test case for set_website_redis_state

        Set Redis state for an existing website
        """
        pass

    def test_set_website_setting(self) -> None:
        """Test case for set_website_setting

        Set a single override setting
        """
        pass

    def test_take_screenshot(self) -> None:
        """Test case for take_screenshot

        Take website screenshot immediately
        """
        pass

    def test_unauthorize_website_ssh_key(self) -> None:
        """Test case for unauthorize_website_ssh_key

        Unauthorize the public SSH key with the given ID.
        """
        pass

    def test_update_ftp_user(self) -> None:
        """Test case for update_ftp_user

        Update given FTP user
        """
        pass

    def test_update_user_crontab(self) -> None:
        """Test case for update_user_crontab

        Update user's crontab
        """
        pass

    def test_update_website(self) -> None:
        """Test case for update_website

        Update website
        """
        pass

    def test_update_website_domain_mapping(self) -> None:
        """Test case for update_website_domain_mapping

        Update website domain mapping
        """
        pass

    def test_update_website_htaccess_ips_rule(self) -> None:
        """Test case for update_website_htaccess_ips_rule

        Sets a rule over provided ips - either block or allow
        """
        pass

    def test_update_website_htaccess_rewrites(self) -> None:
        """Test case for update_website_htaccess_rewrites

        Updates rewrite rules
        """
        pass

    def test_update_website_primary_domain(self) -> None:
        """Test case for update_website_primary_domain

        Update primary domain mapping
        """
        pass

    def test_update_website_ssh_key(self) -> None:
        """Test case for update_website_ssh_key

        Update an existing website public SSH key.
        """
        pass

    def test_upload_website_domain_ssl_cert(self) -> None:
        """Test case for upload_website_domain_ssl_cert

        Upload custom ssl certificate, key and optional fullchain for a given website
        """
        pass

    def test_upload_website_mail_domain_ssl_cert(self) -> None:
        """Test case for upload_website_mail_domain_ssl_cert

        Upload SSL for mail.customerdomain.
        """
        pass

    def test_validate_website_operation(self) -> None:
        """Test case for validate_website_operation

        Validate whether a website operation is allowed
        """
        pass


if __name__ == '__main__':
    unittest.main()
