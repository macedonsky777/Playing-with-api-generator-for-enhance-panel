# coding: utf-8

"""
    orchd

    orchd API docs

    The version of the OpenAPI document: 10.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.importer_analyzed_data import ImporterAnalyzedData

class TestImporterAnalyzedData(unittest.TestCase):
    """ImporterAnalyzedData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ImporterAnalyzedData:
        """Test ImporterAnalyzedData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImporterAnalyzedData`
        """
        model = ImporterAnalyzedData()
        if include_optional:
            return ImporterAnalyzedData(
                domains = [
                    openapi_client.models.importer_analyzed_data_domains_inner.ImporterAnalyzedData_domains_inner(
                        domain_name = '', 
                        domain_kind = '', 
                        php_version = '', 
                        document_root = '', )
                    ],
                mysql_databases = [
                    openapi_client.models.importer_analyzed_data_mysql_databases_inner.ImporterAnalyzedData_mysqlDatabases_inner(
                        db_name = '', 
                        sql_init_path = '', )
                    ],
                mysql_users = [
                    openapi_client.models.importer_analyzed_data_mysql_users_inner.ImporterAnalyzedData_mysqlUsers_inner(
                        username = '', 
                        auth_plugin = '', )
                    ],
                mysql_grants = [
                    openapi_client.models.importer_analyzed_data_mysql_grants_inner.ImporterAnalyzedData_mysqlGrants_inner(
                        db_name = '', 
                        username = '', 
                        table_name = '', 
                        privilege = [
                            ''
                            ], )
                    ],
                crontabs = [
                    openapi_client.models.importer_analyzed_data_crontabs_inner.ImporterAnalyzedData_crontabs_inner(
                        username = '', 
                        crontab = '', )
                    ],
                ftps = [
                    openapi_client.models.importer_analyzed_data_ftps_inner.ImporterAnalyzedData_ftps_inner(
                        username = '', 
                        homedir = '', )
                    ],
                mailboxes = [
                    openapi_client.models.importer_analyzed_data_mailboxes_inner.ImporterAnalyzedData_mailboxes_inner(
                        username = '', 
                        domain = '', 
                        has_mailbox = True, 
                        is_suspended = True, 
                        forwarders = [
                            ''
                            ], 
                        quota = 1.337, )
                    ]
            )
        else:
            return ImporterAnalyzedData(
                domains = [
                    openapi_client.models.importer_analyzed_data_domains_inner.ImporterAnalyzedData_domains_inner(
                        domain_name = '', 
                        domain_kind = '', 
                        php_version = '', 
                        document_root = '', )
                    ],
        )
        """

    def testImporterAnalyzedData(self):
        """Test ImporterAnalyzedData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
