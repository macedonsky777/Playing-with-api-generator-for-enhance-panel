# coding: utf-8

"""
    orchd

    orchd API docs

    The version of the OpenAPI document: 10.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscriptions_listing import SubscriptionsListing

class TestSubscriptionsListing(unittest.TestCase):
    """SubscriptionsListing unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionsListing:
        """Test SubscriptionsListing
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionsListing`
        """
        model = SubscriptionsListing()
        if include_optional:
            return SubscriptionsListing(
                items = [
                    openapi_client.models.subscription.Subscription(
                        id = 56, 
                        plan_id = 56, 
                        plan_name = '', 
                        subscriber_id = '', 
                        vendor_id = '', 
                        status = 'active', 
                        suspended_by = '', 
                        resources = [
                            openapi_client.models.used_resource.UsedResource(
                                name = 'customers', 
                                total = 56, 
                                usage = 56, )
                            ], 
                        allowances = [
                            openapi_client.models.allowance.Allowance(
                                name = '', )
                            ], 
                        selections = [
                            openapi_client.models.selection.Selection(
                                name = '', 
                                value = '', )
                            ], 
                        dedicated_servers = openapi_client.models.subscription_dedicated_servers_info.SubscriptionDedicatedServersInfo(
                            app_server = openapi_client.models.subscription_dedicated_server.SubscriptionDedicatedServer(
                                name = '', 
                                id = '', ), 
                            backup_server = openapi_client.models.subscription_dedicated_server.SubscriptionDedicatedServer(
                                name = '', 
                                id = '', ), 
                            db_server = , 
                            email_server = , ), 
                        plan_type = 'shared', 
                        allowed_php_versions = [
                            'php56'
                            ], 
                        default_php_version = 'php56', 
                        redis_allowed = True, 
                        server_groups = [
                            openapi_client.models.server_group.ServerGroup(
                                id = '', 
                                name = '', 
                                server_count = 1.337, 
                                created_at = '', )
                            ], 
                        preinstall_wordpress_theme = '', 
                        friendly_name = '', )
                    ],
                total = 56
            )
        else:
            return SubscriptionsListing(
                items = [
                    openapi_client.models.subscription.Subscription(
                        id = 56, 
                        plan_id = 56, 
                        plan_name = '', 
                        subscriber_id = '', 
                        vendor_id = '', 
                        status = 'active', 
                        suspended_by = '', 
                        resources = [
                            openapi_client.models.used_resource.UsedResource(
                                name = 'customers', 
                                total = 56, 
                                usage = 56, )
                            ], 
                        allowances = [
                            openapi_client.models.allowance.Allowance(
                                name = '', )
                            ], 
                        selections = [
                            openapi_client.models.selection.Selection(
                                name = '', 
                                value = '', )
                            ], 
                        dedicated_servers = openapi_client.models.subscription_dedicated_servers_info.SubscriptionDedicatedServersInfo(
                            app_server = openapi_client.models.subscription_dedicated_server.SubscriptionDedicatedServer(
                                name = '', 
                                id = '', ), 
                            backup_server = openapi_client.models.subscription_dedicated_server.SubscriptionDedicatedServer(
                                name = '', 
                                id = '', ), 
                            db_server = , 
                            email_server = , ), 
                        plan_type = 'shared', 
                        allowed_php_versions = [
                            'php56'
                            ], 
                        default_php_version = 'php56', 
                        redis_allowed = True, 
                        server_groups = [
                            openapi_client.models.server_group.ServerGroup(
                                id = '', 
                                name = '', 
                                server_count = 1.337, 
                                created_at = '', )
                            ], 
                        preinstall_wordpress_theme = '', 
                        friendly_name = '', )
                    ],
                total = 56,
        )
        """

    def testSubscriptionsListing(self):
        """Test SubscriptionsListing"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
