# coding: utf-8

"""
    orchd

    orchd API docs

    The version of the OpenAPI document: 10.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.roles_info import RolesInfo

class TestRolesInfo(unittest.TestCase):
    """RolesInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RolesInfo:
        """Test RolesInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RolesInfo`
        """
        model = RolesInfo()
        if include_optional:
            return RolesInfo(
                email = openapi_client.models.email_role_info.EmailRoleInfo(
                    state = 'enabled', 
                    usage = 56, 
                    mailbox_count = 56, 
                    failed_delivery_count = 56, 
                    mtacd = openapi_client.models.service_info.ServiceInfo(
                        id = '', 
                        version = '', 
                        status = 'unknown', 
                        port = 56, 
                        usage = 56, 
                        processes = [
                            openapi_client.models.process_info.ProcessInfo(
                                pid = 56, 
                                name = '', 
                                cpu_usage = 1.337, 
                                res_memory = 56, )
                            ], ), 
                    imapcd = openapi_client.models.service_info.ServiceInfo(
                        id = '', 
                        version = '', 
                        status = 'unknown', 
                        port = 56, 
                        usage = 56, ), 
                    spamcd = , 
                    websites_count = 56, ),
                backup = openapi_client.models.backup_role_info.BackupRoleInfo(
                    state = 'enabled', 
                    usage = 56, 
                    snapshots_count = 56, 
                    last24h_snapshots_count = 56, 
                    bkupd = openapi_client.models.service_info.ServiceInfo(
                        id = '', 
                        version = '', 
                        status = 'unknown', 
                        port = 56, 
                        usage = 56, 
                        processes = [
                            openapi_client.models.process_info.ProcessInfo(
                                pid = 56, 
                                name = '', 
                                cpu_usage = 1.337, 
                                res_memory = 56, )
                            ], ), 
                    websites_count = 56, ),
                database = openapi_client.models.database_role_info.DatabaseRoleInfo(
                    state = 'enabled', 
                    usage = 56, 
                    mysql_stats = openapi_client.models.mysql_stats.mysqlStats(), 
                    mysqlcd = openapi_client.models.service_info.ServiceInfo(
                        id = '', 
                        version = '', 
                        status = 'unknown', 
                        port = 56, 
                        usage = 56, 
                        processes = [
                            openapi_client.models.process_info.ProcessInfo(
                                pid = 56, 
                                name = '', 
                                cpu_usage = 1.337, 
                                res_memory = 56, )
                            ], ), 
                    websites_count = 56, ),
                application = openapi_client.models.application_role_info.ApplicationRoleInfo(
                    state = 'enabled', 
                    usage = 56, 
                    filerd = openapi_client.models.service_info.ServiceInfo(
                        id = '', 
                        version = '', 
                        status = 'unknown', 
                        port = 56, 
                        usage = 56, 
                        processes = [
                            openapi_client.models.process_info.ProcessInfo(
                                pid = 56, 
                                name = '', 
                                cpu_usage = 1.337, 
                                res_memory = 56, )
                            ], ), 
                    ftpcd = openapi_client.models.service_info.ServiceInfo(
                        id = '', 
                        version = '', 
                        status = 'unknown', 
                        port = 56, 
                        usage = 56, ), 
                    websites_count = 56, ),
                dns = openapi_client.models.dns_role_info.DnsRoleInfo(
                    state = 'enabled', 
                    usage = 56, 
                    zones_count = 56, 
                    dnscd = openapi_client.models.service_info.ServiceInfo(
                        id = '', 
                        version = '', 
                        status = 'unknown', 
                        port = 56, 
                        usage = 56, 
                        processes = [
                            openapi_client.models.process_info.ProcessInfo(
                                pid = 56, 
                                name = '', 
                                cpu_usage = 1.337, 
                                res_memory = 56, )
                            ], ), 
                    websites_count = 56, ),
                webserver_kind = 'liteSpeed'
            )
        else:
            return RolesInfo(
        )
        """

    def testRolesInfo(self):
        """Test RolesInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
